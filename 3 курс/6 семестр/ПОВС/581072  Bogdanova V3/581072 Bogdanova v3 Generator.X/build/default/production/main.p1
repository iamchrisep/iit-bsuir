Version 3.2 HI-TECH Software Intermediate Code
"654 E:\Programs\Microchip\xc8\v1.45\include\pic16f84a.h
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"652
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"650
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"658
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"660
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"662
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"664
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"57
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"686
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"310
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . RBIF INTF T0IF RBIE INTE T0IE EEIE GIE ]
"320
[s S18 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S18 . . TMR0IF . TMR0IE ]
"309
[u S16 `S17 1 `S18 1 ]
[n S16 . . . ]
"327
[v _INTCONbits `VS16 ~T0 @X0 0 e@11 ]
[p mainexit ]
"388
[s S20 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S20 . PS PSA T0SE T0CS INTEDG nRBPU ]
"396
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . PS0 PS1 PS2 ]
"387
[u S19 `S20 1 `S21 1 ]
[n S19 . . . ]
"402
[v _OPTION_REGbits `VS19 ~T0 @X0 0 e@129 ]
"304
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"452
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"496
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"208
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16f84a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 E:\Programs\Microchip\xc8\v1.45\include\pic16f84a.h
[; ;pic16f84a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f84a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f84a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f84a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f84a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f84a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f84a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f84a.h: 76: typedef union {
[; ;pic16f84a.h: 77: struct {
[; ;pic16f84a.h: 78: unsigned C :1;
[; ;pic16f84a.h: 79: unsigned DC :1;
[; ;pic16f84a.h: 80: unsigned Z :1;
[; ;pic16f84a.h: 81: unsigned nPD :1;
[; ;pic16f84a.h: 82: unsigned nTO :1;
[; ;pic16f84a.h: 83: unsigned RP :2;
[; ;pic16f84a.h: 84: unsigned IRP :1;
[; ;pic16f84a.h: 85: };
[; ;pic16f84a.h: 86: struct {
[; ;pic16f84a.h: 87: unsigned :5;
[; ;pic16f84a.h: 88: unsigned RP0 :1;
[; ;pic16f84a.h: 89: unsigned RP1 :1;
[; ;pic16f84a.h: 90: };
[; ;pic16f84a.h: 91: struct {
[; ;pic16f84a.h: 92: unsigned CARRY :1;
[; ;pic16f84a.h: 93: unsigned :1;
[; ;pic16f84a.h: 94: unsigned ZERO :1;
[; ;pic16f84a.h: 95: };
[; ;pic16f84a.h: 96: } STATUSbits_t;
[; ;pic16f84a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f84a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f84a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f84a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f84a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f84a.h: 169: typedef union {
[; ;pic16f84a.h: 170: struct {
[; ;pic16f84a.h: 171: unsigned RA0 :1;
[; ;pic16f84a.h: 172: unsigned RA1 :1;
[; ;pic16f84a.h: 173: unsigned RA2 :1;
[; ;pic16f84a.h: 174: unsigned RA3 :1;
[; ;pic16f84a.h: 175: unsigned RA4 :1;
[; ;pic16f84a.h: 176: };
[; ;pic16f84a.h: 177: } PORTAbits_t;
[; ;pic16f84a.h: 178: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f84a.h: 208: extern volatile unsigned char PORTB @ 0x006;
"210
[; ;pic16f84a.h: 210: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f84a.h: 213: typedef union {
[; ;pic16f84a.h: 214: struct {
[; ;pic16f84a.h: 215: unsigned RB0 :1;
[; ;pic16f84a.h: 216: unsigned RB1 :1;
[; ;pic16f84a.h: 217: unsigned RB2 :1;
[; ;pic16f84a.h: 218: unsigned RB3 :1;
[; ;pic16f84a.h: 219: unsigned RB4 :1;
[; ;pic16f84a.h: 220: unsigned RB5 :1;
[; ;pic16f84a.h: 221: unsigned RB6 :1;
[; ;pic16f84a.h: 222: unsigned RB7 :1;
[; ;pic16f84a.h: 223: };
[; ;pic16f84a.h: 224: } PORTBbits_t;
[; ;pic16f84a.h: 225: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f84a.h: 270: extern volatile unsigned char EEDATA @ 0x008;
"272
[; ;pic16f84a.h: 272: asm("EEDATA equ 08h");
[; <" EEDATA equ 08h ;# ">
[; ;pic16f84a.h: 277: extern volatile unsigned char EEADR @ 0x009;
"279
[; ;pic16f84a.h: 279: asm("EEADR equ 09h");
[; <" EEADR equ 09h ;# ">
[; ;pic16f84a.h: 284: extern volatile unsigned char PCLATH @ 0x00A;
"286
[; ;pic16f84a.h: 286: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f84a.h: 289: typedef union {
[; ;pic16f84a.h: 290: struct {
[; ;pic16f84a.h: 291: unsigned PCLATH :5;
[; ;pic16f84a.h: 292: };
[; ;pic16f84a.h: 293: } PCLATHbits_t;
[; ;pic16f84a.h: 294: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f84a.h: 304: extern volatile unsigned char INTCON @ 0x00B;
"306
[; ;pic16f84a.h: 306: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f84a.h: 309: typedef union {
[; ;pic16f84a.h: 310: struct {
[; ;pic16f84a.h: 311: unsigned RBIF :1;
[; ;pic16f84a.h: 312: unsigned INTF :1;
[; ;pic16f84a.h: 313: unsigned T0IF :1;
[; ;pic16f84a.h: 314: unsigned RBIE :1;
[; ;pic16f84a.h: 315: unsigned INTE :1;
[; ;pic16f84a.h: 316: unsigned T0IE :1;
[; ;pic16f84a.h: 317: unsigned EEIE :1;
[; ;pic16f84a.h: 318: unsigned GIE :1;
[; ;pic16f84a.h: 319: };
[; ;pic16f84a.h: 320: struct {
[; ;pic16f84a.h: 321: unsigned :2;
[; ;pic16f84a.h: 322: unsigned TMR0IF :1;
[; ;pic16f84a.h: 323: unsigned :2;
[; ;pic16f84a.h: 324: unsigned TMR0IE :1;
[; ;pic16f84a.h: 325: };
[; ;pic16f84a.h: 326: } INTCONbits_t;
[; ;pic16f84a.h: 327: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f84a.h: 382: extern volatile unsigned char OPTION_REG @ 0x081;
"384
[; ;pic16f84a.h: 384: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f84a.h: 387: typedef union {
[; ;pic16f84a.h: 388: struct {
[; ;pic16f84a.h: 389: unsigned PS :3;
[; ;pic16f84a.h: 390: unsigned PSA :1;
[; ;pic16f84a.h: 391: unsigned T0SE :1;
[; ;pic16f84a.h: 392: unsigned T0CS :1;
[; ;pic16f84a.h: 393: unsigned INTEDG :1;
[; ;pic16f84a.h: 394: unsigned nRBPU :1;
[; ;pic16f84a.h: 395: };
[; ;pic16f84a.h: 396: struct {
[; ;pic16f84a.h: 397: unsigned PS0 :1;
[; ;pic16f84a.h: 398: unsigned PS1 :1;
[; ;pic16f84a.h: 399: unsigned PS2 :1;
[; ;pic16f84a.h: 400: };
[; ;pic16f84a.h: 401: } OPTION_REGbits_t;
[; ;pic16f84a.h: 402: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f84a.h: 452: extern volatile unsigned char TRISA @ 0x085;
"454
[; ;pic16f84a.h: 454: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f84a.h: 457: typedef union {
[; ;pic16f84a.h: 458: struct {
[; ;pic16f84a.h: 459: unsigned TRISA0 :1;
[; ;pic16f84a.h: 460: unsigned TRISA1 :1;
[; ;pic16f84a.h: 461: unsigned TRISA2 :1;
[; ;pic16f84a.h: 462: unsigned TRISA3 :1;
[; ;pic16f84a.h: 463: unsigned TRISA4 :1;
[; ;pic16f84a.h: 464: };
[; ;pic16f84a.h: 465: } TRISAbits_t;
[; ;pic16f84a.h: 466: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f84a.h: 496: extern volatile unsigned char TRISB @ 0x086;
"498
[; ;pic16f84a.h: 498: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f84a.h: 501: typedef union {
[; ;pic16f84a.h: 502: struct {
[; ;pic16f84a.h: 503: unsigned TRISB0 :1;
[; ;pic16f84a.h: 504: unsigned TRISB1 :1;
[; ;pic16f84a.h: 505: unsigned TRISB2 :1;
[; ;pic16f84a.h: 506: unsigned TRISB3 :1;
[; ;pic16f84a.h: 507: unsigned TRISB4 :1;
[; ;pic16f84a.h: 508: unsigned TRISB5 :1;
[; ;pic16f84a.h: 509: unsigned TRISB6 :1;
[; ;pic16f84a.h: 510: unsigned TRISB7 :1;
[; ;pic16f84a.h: 511: };
[; ;pic16f84a.h: 512: } TRISBbits_t;
[; ;pic16f84a.h: 513: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f84a.h: 558: extern volatile unsigned char EECON1 @ 0x088;
"560
[; ;pic16f84a.h: 560: asm("EECON1 equ 088h");
[; <" EECON1 equ 088h ;# ">
[; ;pic16f84a.h: 563: typedef union {
[; ;pic16f84a.h: 564: struct {
[; ;pic16f84a.h: 565: unsigned RD :1;
[; ;pic16f84a.h: 566: unsigned WR :1;
[; ;pic16f84a.h: 567: unsigned WREN :1;
[; ;pic16f84a.h: 568: unsigned WRERR :1;
[; ;pic16f84a.h: 569: unsigned EEIF :1;
[; ;pic16f84a.h: 570: };
[; ;pic16f84a.h: 571: } EECON1bits_t;
[; ;pic16f84a.h: 572: extern volatile EECON1bits_t EECON1bits @ 0x088;
[; ;pic16f84a.h: 602: extern volatile unsigned char EECON2 @ 0x089;
"604
[; ;pic16f84a.h: 604: asm("EECON2 equ 089h");
[; <" EECON2 equ 089h ;# ">
[; ;pic16f84a.h: 614: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f84a.h: 616: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f84a.h: 618: extern volatile __bit EEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f84a.h: 620: extern volatile __bit EEIF @ (((unsigned) &EECON1)*8) + 4;
[; ;pic16f84a.h: 622: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f84a.h: 624: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f84a.h: 626: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f84a.h: 628: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f84a.h: 630: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f84a.h: 632: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f84a.h: 634: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f84a.h: 636: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f84a.h: 638: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f84a.h: 640: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f84a.h: 642: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f84a.h: 644: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f84a.h: 646: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f84a.h: 648: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f84a.h: 650: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f84a.h: 652: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f84a.h: 654: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f84a.h: 656: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f84a.h: 658: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f84a.h: 660: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f84a.h: 662: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f84a.h: 664: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f84a.h: 666: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f84a.h: 668: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f84a.h: 670: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f84a.h: 672: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f84a.h: 674: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f84a.h: 676: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f84a.h: 678: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 680: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 682: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f84a.h: 684: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 686: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 688: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f84a.h: 690: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f84a.h: 692: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f84a.h: 694: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f84a.h: 696: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f84a.h: 698: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f84a.h: 700: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f84a.h: 702: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f84a.h: 704: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f84a.h: 706: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f84a.h: 708: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f84a.h: 710: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f84a.h: 712: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f84a.h: 714: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f84a.h: 716: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f84a.h: 718: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f84a.h: 720: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f84a.h: 722: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f84a.h: 724: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f84a.h: 726: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"30 main.c
[v _codeType `uc ~T0 @X0 1 e ]
[; ;main.c: 30: unsigned char codeType;
"31
[v _code `uc ~T0 @X0 1 e ]
[; ;main.c: 31: unsigned char code;
"33
[v _readKey `(uc ~T0 @X0 1 ef ]
{
[; ;main.c: 33: char readKey() {
[e :U _readKey ]
[f ]
[; ;main.c: 34: RB2 = 1;
"34
[e = _RB2 -> -> 1 `i `b ]
[; ;main.c: 35: RB1 = 0;
"35
[e = _RB1 -> -> 0 `i `b ]
[; ;main.c: 36: RB0 = 0;
"36
[e = _RB0 -> -> 0 `i `b ]
[; ;main.c: 37: if (RB4) {
"37
[e $ ! _RB4 29  ]
{
[; ;main.c: 38: while (RB4) ;
"38
[e $U 30  ]
[e :U 31 ]
[e :U 30 ]
[e $ _RB4 31  ]
[e :U 32 ]
[; ;main.c: 39: return 1;
"39
[e ) -> -> 1 `i `uc ]
[e $UE 28  ]
"40
}
[; ;main.c: 40: } else if (RB5) {
[e $U 33  ]
[e :U 29 ]
[e $ ! _RB5 34  ]
{
[; ;main.c: 41: while (RB5) ;
"41
[e $U 35  ]
[e :U 36 ]
[e :U 35 ]
[e $ _RB5 36  ]
[e :U 37 ]
[; ;main.c: 42: return 4;
"42
[e ) -> -> 4 `i `uc ]
[e $UE 28  ]
"43
}
[; ;main.c: 43: } else if (RB6) {
[e $U 38  ]
[e :U 34 ]
[e $ ! _RB6 39  ]
{
[; ;main.c: 44: while (RB6) ;
"44
[e $U 40  ]
[e :U 41 ]
[e :U 40 ]
[e $ _RB6 41  ]
[e :U 42 ]
[; ;main.c: 45: return 7;
"45
[e ) -> -> 7 `i `uc ]
[e $UE 28  ]
"46
}
[; ;main.c: 46: } else if (RB7) {
[e $U 43  ]
[e :U 39 ]
[e $ ! _RB7 44  ]
{
[; ;main.c: 47: while (RB7) ;
"47
[e $U 45  ]
[e :U 46 ]
[e :U 45 ]
[e $ _RB7 46  ]
[e :U 47 ]
[; ;main.c: 48: return 10;
"48
[e ) -> -> 10 `i `uc ]
[e $UE 28  ]
"49
}
[e :U 44 ]
"51
[e :U 43 ]
[e :U 38 ]
[e :U 33 ]
[; ;main.c: 49: }
[; ;main.c: 51: RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
[; ;main.c: 52: RB1 = 1;
"52
[e = _RB1 -> -> 1 `i `b ]
[; ;main.c: 53: RB0 = 0;
"53
[e = _RB0 -> -> 0 `i `b ]
[; ;main.c: 54: if (RB4) {
"54
[e $ ! _RB4 48  ]
{
[; ;main.c: 55: while (RB4) ;
"55
[e $U 49  ]
[e :U 50 ]
[e :U 49 ]
[e $ _RB4 50  ]
[e :U 51 ]
[; ;main.c: 56: return 2;
"56
[e ) -> -> 2 `i `uc ]
[e $UE 28  ]
"57
}
[; ;main.c: 57: } else if (RB5) {
[e $U 52  ]
[e :U 48 ]
[e $ ! _RB5 53  ]
{
[; ;main.c: 58: while (RB5) ;
"58
[e $U 54  ]
[e :U 55 ]
[e :U 54 ]
[e $ _RB5 55  ]
[e :U 56 ]
[; ;main.c: 59: return 5;
"59
[e ) -> -> 5 `i `uc ]
[e $UE 28  ]
"60
}
[; ;main.c: 60: } else if (RB6) {
[e $U 57  ]
[e :U 53 ]
[e $ ! _RB6 58  ]
{
[; ;main.c: 61: while (RB6) ;
"61
[e $U 59  ]
[e :U 60 ]
[e :U 59 ]
[e $ _RB6 60  ]
[e :U 61 ]
[; ;main.c: 62: return 8;
"62
[e ) -> -> 8 `i `uc ]
[e $UE 28  ]
"63
}
[; ;main.c: 63: } else if (RB7) {
[e $U 62  ]
[e :U 58 ]
[e $ ! _RB7 63  ]
{
[; ;main.c: 64: while (RB7) ;
"64
[e $U 64  ]
[e :U 65 ]
[e :U 64 ]
[e $ _RB7 65  ]
[e :U 66 ]
[; ;main.c: 65: return 0;
"65
[e ) -> -> 0 `i `uc ]
[e $UE 28  ]
"66
}
[e :U 63 ]
"68
[e :U 62 ]
[e :U 57 ]
[e :U 52 ]
[; ;main.c: 66: }
[; ;main.c: 68: RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
[; ;main.c: 69: RB1 = 0;
"69
[e = _RB1 -> -> 0 `i `b ]
[; ;main.c: 70: RB0 = 1;
"70
[e = _RB0 -> -> 1 `i `b ]
[; ;main.c: 71: if (RB4) {
"71
[e $ ! _RB4 67  ]
{
[; ;main.c: 72: while (RB4) ;
"72
[e $U 68  ]
[e :U 69 ]
[e :U 68 ]
[e $ _RB4 69  ]
[e :U 70 ]
[; ;main.c: 73: return 3;
"73
[e ) -> -> 3 `i `uc ]
[e $UE 28  ]
"74
}
[; ;main.c: 74: } else if (RB5) {
[e $U 71  ]
[e :U 67 ]
[e $ ! _RB5 72  ]
{
[; ;main.c: 75: while (RB5) ;
"75
[e $U 73  ]
[e :U 74 ]
[e :U 73 ]
[e $ _RB5 74  ]
[e :U 75 ]
[; ;main.c: 76: return 6;
"76
[e ) -> -> 6 `i `uc ]
[e $UE 28  ]
"77
}
[; ;main.c: 77: } else if (RB6) {
[e $U 76  ]
[e :U 72 ]
[e $ ! _RB6 77  ]
{
[; ;main.c: 78: while (RB6) ;
"78
[e $U 78  ]
[e :U 79 ]
[e :U 78 ]
[e $ _RB6 79  ]
[e :U 80 ]
[; ;main.c: 79: return 9;
"79
[e ) -> -> 9 `i `uc ]
[e $UE 28  ]
"80
}
[; ;main.c: 80: } else if (RB7) {
[e $U 81  ]
[e :U 77 ]
[e $ ! _RB7 82  ]
{
[; ;main.c: 81: while (RB7) ;
"81
[e $U 83  ]
[e :U 84 ]
[e :U 83 ]
[e $ _RB7 84  ]
[e :U 85 ]
[; ;main.c: 82: return 11;
"82
[e ) -> -> 11 `i `uc ]
[e $UE 28  ]
"83
}
[e :U 82 ]
"85
[e :U 81 ]
[e :U 76 ]
[e :U 71 ]
[; ;main.c: 83: }
[; ;main.c: 85: while (TMR0 % 5) ;
[e $U 86  ]
[e :U 87 ]
[e :U 86 ]
[e $ != % -> _TMR0 `i -> 5 `i -> 0 `i 87  ]
[e :U 88 ]
[; ;main.c: 86: return 12;
"86
[e ) -> -> 12 `i `uc ]
[e $UE 28  ]
[; ;main.c: 87: }
"87
[e :UE 28 ]
}
"89
[v _nextCode `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 89: void nextCode() {
[e :U _nextCode ]
[f ]
[; ;main.c: 90: if (codeType == 1) {
"90
[e $ ! == -> _codeType `i -> 1 `i 90  ]
{
[; ;main.c: 91: code += 1;
"91
[e =+ _code -> -> 1 `i `uc ]
"92
}
[e :U 90 ]
[; ;main.c: 92: }
[; ;main.c: 93: code &= 0xF;
"93
[e =& _code -> -> 15 `i `uc ]
[; ;main.c: 94: }
"94
[e :UE 89 ]
}
"96
[v _initCode `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 96: void initCode() {
[e :U _initCode ]
[f ]
[; ;main.c: 97: if (codeType == 1) {
"97
[e $ ! == -> _codeType `i -> 1 `i 92  ]
{
[; ;main.c: 98: code = 0b0000;
"98
[e = _code -> -> 0 `i `uc ]
"99
}
[e :U 92 ]
[; ;main.c: 99: }
[; ;main.c: 100: PORTA = code;
"100
[e = _PORTA _code ]
[; ;main.c: 101: }
"101
[e :UE 91 ]
}
"103
[v _interrupts `uc ~T0 @X0 1 e ]
[i _interrupts
-> -> 0 `i `uc
]
[; ;main.c: 103: unsigned char interrupts = 0;
[v $root$_tcInt `(v ~T0 @X0 0 e ]
[v F471 `(v ~T0 @X0 1 tf ]
"104
[v _tcInt `IF471 ~T0 @X0 1 e ]
{
[; ;main.c: 104: void interrupt tcInt() {
[e :U _tcInt ]
[f ]
[; ;main.c: 105: if (TMR0IF) {
"105
[e $ ! _TMR0IF 94  ]
{
[; ;main.c: 106: interrupts++;
"106
[e ++ _interrupts -> -> 1 `i `uc ]
[; ;main.c: 107: if (interrupts == 4) {
"107
[e $ ! == -> _interrupts `i -> 4 `i 95  ]
{
[; ;main.c: 108: interrupts = 0;
"108
[e = _interrupts -> -> 0 `i `uc ]
[; ;main.c: 109: nextCode();
"109
[e ( _nextCode ..  ]
[; ;main.c: 110: PORTA = code;
"110
[e = _PORTA _code ]
"111
}
[e :U 95 ]
[; ;main.c: 111: }
[; ;main.c: 112: INTCONbits.TMR0IF = 0;
"112
[e = . . _INTCONbits 1 1 -> -> 0 `i `uc ]
[; ;main.c: 113: INTCONbits.TMR0IE = 1;
"113
[e = . . _INTCONbits 1 3 -> -> 1 `i `uc ]
[; ;main.c: 114: TMR0 = 12;
"114
[e = _TMR0 -> -> 12 `i `uc ]
"115
}
[e :U 94 ]
[; ;main.c: 115: }
[; ;main.c: 116: }
"116
[e :UE 93 ]
}
"118
[v _startTimer `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 118: void startTimer() {
[e :U _startTimer ]
[f ]
[; ;main.c: 119: interrupts = 0;
"119
[e = _interrupts -> -> 0 `i `uc ]
[; ;main.c: 120: INTCONbits.TMR0IF = 0;
"120
[e = . . _INTCONbits 1 1 -> -> 0 `i `uc ]
[; ;main.c: 121: INTCONbits.TMR0IE = 1;
"121
[e = . . _INTCONbits 1 3 -> -> 1 `i `uc ]
[; ;main.c: 122: TMR0 = 12;
"122
[e = _TMR0 -> -> 12 `i `uc ]
[; ;main.c: 123: }
"123
[e :UE 96 ]
}
"125
[v _stopTimer `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 125: void stopTimer() {
[e :U _stopTimer ]
[f ]
[; ;main.c: 126: INTCONbits.TMR0IE = 0;
"126
[e = . . _INTCONbits 1 3 -> -> 0 `i `uc ]
[; ;main.c: 127: }
"127
[e :UE 97 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"132
[v _main `(i ~T0 @X0 1 ef2`i`**uc ]
{
[; ;main.c: 132: int main(int argc, char** argv) {
[e :U _main ]
[v _argc `i ~T0 @X0 1 r1 ]
[v _argv `**uc ~T0 @X0 1 r2 ]
[f ]
[; ;main.c: 133: codeType = 0;
"133
[e = _codeType -> -> 0 `i `uc ]
[; ;main.c: 134: code = 0;
"134
[e = _code -> -> 0 `i `uc ]
[; ;main.c: 136: OPTION_REGbits.T0CS = 0;
"136
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 138: OPTION_REGbits.PSA = 0;
"138
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 139: OPTION_REGbits.PS = 0b111;
"139
[e = . . _OPTION_REGbits 0 0 -> -> 7 `i `uc ]
[; ;main.c: 140: TMR0 = 12;
"140
[e = _TMR0 -> -> 12 `i `uc ]
[; ;main.c: 142: INTCON = 0;
"142
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 143: INTCONbits.TMR0IE = 0;
"143
[e = . . _INTCONbits 1 3 -> -> 0 `i `uc ]
[; ;main.c: 144: INTCONbits.TMR0IF = 0;
"144
[e = . . _INTCONbits 1 1 -> -> 0 `i `uc ]
[; ;main.c: 145: INTCONbits.GIE = 1;
"145
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 147: TRISA = 0b10000;
"147
[e = _TRISA -> -> 16 `i `uc ]
[; ;main.c: 148: TRISB = 0b11111000;
"148
[e = _TRISB -> -> 248 `i `uc ]
[; ;main.c: 150: PORTA = 0;
"150
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 151: PORTB = 0;
"151
[e = _PORTB -> -> 0 `i `uc ]
"153
[v _key `uc ~T0 @X0 1 a ]
[; ;main.c: 153: char key;
[; ;main.c: 154: while (1) {
"154
[e :U 100 ]
{
[; ;main.c: 155: while ((key = readKey()) == 12) ;
"155
[e $U 102  ]
[e :U 103 ]
[e :U 102 ]
[e $ == -> = _key ( _readKey ..  `i -> 12 `i 103  ]
[e :U 104 ]
[; ;main.c: 156: codeType = key;
"156
[e = _codeType _key ]
[; ;main.c: 157: initCode();
"157
[e ( _initCode ..  ]
[; ;main.c: 158: if (codeType == 1) {
"158
[e $ ! == -> _codeType `i -> 1 `i 105  ]
{
[; ;main.c: 159: startTimer();
"159
[e ( _startTimer ..  ]
"160
}
[; ;main.c: 160: } else {
[e $U 106  ]
[e :U 105 ]
{
[; ;main.c: 161: stopTimer();
"161
[e ( _stopTimer ..  ]
[; ;main.c: 162: PORTA = 0;
"162
[e = _PORTA -> -> 0 `i `uc ]
"163
}
[e :U 106 ]
"164
}
[e :U 99 ]
"154
[e $U 100  ]
[e :U 101 ]
[; ;main.c: 163: }
[; ;main.c: 164: }
[; ;main.c: 165: return (0);
"165
[e ) -> 0 `i ]
[e $UE 98  ]
[; ;main.c: 166: }
"166
[e :UE 98 ]
}
